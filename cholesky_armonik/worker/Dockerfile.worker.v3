
FROM ubuntu:24.04 AS builder
ENV DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git pkg-config \
    libhwloc-dev libnuma-dev libomp-dev \
    libtool libtool-bin autoconf automake m4 \
    gfortran curl wget unzip ca-certificates gnupg2 \
    zlib1g-dev libffi-dev libssl-dev \
    libevent-dev libudev-dev libcap-dev \
    libx11-dev libxext-dev libxrender-dev libxtst-dev \
    python3 python3-pip python3-dev \
    libxml2-dev libxslt1-dev \
    libnuma1 libpciaccess0 libpciaccess-dev \
    ninja-build ocl-icd-opencl-dev \
    openmpi-bin libopenmpi-dev \
    libnvidia-ml-dev \
 && rm -rf /var/lib/apt/lists/*

RUN set -eux; cd /tmp; \
    git clone --depth 1 --branch v0.3.26 https://github.com/xianyi/OpenBLAS.git; \
    cd OpenBLAS; make USE_LAPACK=1 LAPACKE=1 -j"$(nproc)"; \
    make install PREFIX=/usr/local; ldconfig; rm -rf /tmp/OpenBLAS

RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && rm -f cuda-keyring_1.1-1_all.deb && \
    apt-get update && apt-get install -y --no-install-recommends cuda-toolkit-12-9 && \
    rm -rf /var/lib/apt/lists/*

RUN printf "/usr/local/cuda/lib64\n/usr/local/lib\n" > /etc/ld.so.conf.d/cuda.conf && ldconfig

ENV CUDA_HOME="/usr/local/cuda" \
    PATH="/usr/local/cuda/bin:/opt/hwloc_cuda/bin:${PATH}" \
    LD_LIBRARY_PATH="/usr/local/cuda/lib64:/opt/hwloc_cuda/lib" \
    PKG_CONFIG_PATH="/usr/local/cuda/lib64/pkgconfig:/opt/hwloc_cuda/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig"

RUN set -eux; cd /tmp; \
    git clone --branch hwloc-2.10.0 https://github.com/open-mpi/hwloc.git; \
    cd hwloc; ./autogen.sh; \
    export ac_cv_lib_nvidia_ml_nvmlInit=no; \
    ./configure --enable-cuda --with-cuda=/usr/local/cuda --disable-nvml --prefix=/opt/hwloc_cuda; \
    make -j"$(nproc)"; make install; ldconfig; rm -rf /tmp/hwloc

RUN set -eux; cd /tmp; \
  git clone --depth 1 --branch starpu-1.4 https://gitlab.inria.fr/starpu/starpu.git; \
  cd starpu; ./autogen.sh; \
  ./configure --prefix=/usr/local \
      --with-hwloc=/opt/hwloc_cuda \
      --enable-cuda --enable-opencl --enable-mpi \
      --with-cuda=/usr/local/cuda \
      --disable-build-doc --disable-python --without-python --disable-starpupy \
      PYTHON=no \
      --with-blas-lib="-lopenblas" --with-blas-inc="/usr/local/include"; \
  make -j"$(nproc)"; make install; ldconfig; rm -rf /tmp/starpu

RUN set -eux; cd /tmp; \
    git clone --depth 1 --recurse-submodules https://gitlab.inria.fr/solverstack/chameleon.git; \
    cd chameleon; mkdir build && cd build; \
    cmake .. \
      -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_SHARED_LIBS=ON \
      -DCHAMELEON_ENABLE_CUDA=ON -DCHAMELEON_USE_CUDA=ON \
      -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc \
      -DCHAMELEON_ENABLE_MPI=ON -DCHAMELEON_ENABLE_OPENCL=ON \
      -DCHAMELEON_SCHED_STARPU=ON -DCHAMELEON_SCHED_PARSEC=OFF -DCHAMELEON_SCHED_QUARK=OFF \
      -DCHAMELEON_ENABLE_TESTING=OFF -DCHAMELEON_PREC_D=ON \
      -DBLAS_LIBRARIES="/usr/local/lib/libopenblas.so" \
      -DBLAS_INCLUDE_DIRS="/usr/local/include" \
      -DLAPACKE_INCLUDE_DIR="/usr/local/include" \
      -DLAPACKE_LIBRARY="/usr/local/lib/libopenblas.so" \
      -DCBLAS_LIBRARY="/usr/local/lib/libopenblas.so" \
      -DSTARPU_DIR=/usr/local -DHWLOC_ROOT=/opt/hwloc_cuda; \
    make -j"$(nproc)"; make install; ldconfig; rm -rf /tmp/chameleon

RUN set -eux; \
  find /usr/local/lib -type f -name "*.so*" -exec strip --strip-unneeded {} + || true; \
  find /opt/hwloc_cuda/lib -type f -name "*.so*" -exec strip --strip-unneeded {} + || true


FROM ubuntu:24.04 AS sdk
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git pkg-config \
    libgrpc++-dev protobuf-compiler-grpc protobuf-compiler libprotobuf-dev \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /src
RUN git clone https://github.com/aneoconsulting/ArmoniK.Api.git .  --depth 1

WORKDIR /src/packages/cpp
RUN cmake -S . -B build \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/opt/armonik-cpp \
      -DBUILD_SHARED_LIBS=ON && \
    cmake --build build -j"$(nproc)" && \
    cmake --install build

RUN set -eux; \
  mkdir -p /opt/armonik-cpp/include/armonik/worker; \
  for f in agent_common.pb.h agent_common.grpc.pb.h; do \
    if [ -f "/src/packages/cpp/build/ArmoniK.Api.Worker/$f" ]; then \
      cp -v "/src/packages/cpp/build/ArmoniK.Api.Worker/$f" /opt/armonik-cpp/include/armonik/worker/; \
    fi; \
  done

RUN set -eux; \
  find /opt/armonik-cpp -type f -name "*.so*" -exec strip --strip-unneeded {} + || true


FROM builder AS worker-build
COPY --from=sdk /opt/armonik-cpp /opt/armonik-cpp
COPY --from=sdk /usr/include /usr/include
COPY --from=sdk /usr/lib /usr/lib

ENV PKG_CONFIG_PATH="/opt/hwloc_cuda/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig" \
    LD_LIBRARY_PATH="/opt/armonik-cpp/lib:/opt/armonik-cpp/lib64:/opt/hwloc_cuda/lib:/usr/local/lib:/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu" \
    PATH="/usr/local/bin:/opt/hwloc_cuda/bin:/usr/local/cuda/bin:${PATH}" \
    ARMONIKCPP_PREFIX="/opt/armonik-cpp"

WORKDIR /src
COPY src/ ./src/

RUN set -eux; \
  mkdir -p build; \
  CXXFLAGS="-O3 -DNDEBUG -std=gnu++17 -fPIE -Wall -Wextra -Wpedantic -DNOMINMAX -DCL_USE_DEPRECATED_OPENCL_1_1_APIS"; \
  INCS="-I/opt/armonik-cpp/include -I/opt/armonik-cpp/include/armonik/common -I/opt/armonik-cpp/include/armonik/worker"; \
  PKGCF="$(pkg-config --cflags grpc++ protobuf starpu-1.4 hwloc libxml-2.0 || pkg-config --cflags grpc++ protobuf starpu-1.4 hwloc)"; \
  for f in $(find src -name '*.cpp'); do \
    g++ $CXXFLAGS $INCS $PKGCF -isystem /usr/local/cuda/include -c "$f" -o "build/$(basename "$f" .cpp).o"; \
  done; \
  PKGLIBS="$(pkg-config --libs grpc++ protobuf starpu-1.4 hwloc libxml-2.0 || pkg-config --libs grpc++ protobuf starpu-1.4 hwloc)"; \
  LIBS="$PKGLIBS -L/opt/armonik-cpp/lib -lArmoniK.Api.Worker -lArmoniK.Api.Common -L/usr/local/lib -lchameleon -lchameleon_starpu -lhqr -lcoreblas -lgpucublas -lopenblas -ldl -lrt -latomic"; \
  g++ -o build/DagCholeskyWorker build/*.o $LIBS \
      -Wl,-rpath,'$ORIGIN:/opt/armonik-cpp/lib:/opt/armonik-cpp/lib64:/usr/local/lib'; \
  file build/DagCholeskyWorker; \
  ldd build/DagCholeskyWorker || true; \
  strip build/DagCholeskyWorker || true; \
  (ls -lah build && find build -maxdepth 1 -type f -name DagCholeskyWorker -printf "EXE: %p\n")



FROM nvidia/cuda:12.9.0-runtime-ubuntu24.04 AS runtime
ENV DEBIAN_FRONTEND=noninteractive


# Creating armonik user with the correct permissions
#RUN addgroup -g 5000 -S armonikuser && adduser -D -h /home/armonikuser -u 5000 -G armonikuser --shell /bin/sh armonikuser && mkdir /cache && chown armonikuser: /cache
RUN groupadd --gid 5000 armonikuser \
 && useradd --uid 5000 --gid 5000 --create-home --home-dir /home/armonikuser --shell /bin/sh armonikuser \
 && mkdir -p /cache \
 && chown -R 5000:5000 /cache /home/armonikuser



RUN apt-get update && apt-get install -y --no-install-recommends \
    libnuma1 \
    libgomp1 \
    libgfortran5 \
    libquadmath0 \
    libcap2 \
    libudev1 \
    libpciaccess0 \
    libxml2 \
    zlib1g \
    libssl3 \
 && rm -rf /var/lib/apt/lists/*


COPY --from=sdk /opt/armonik-cpp/lib/libArmoniK.Api.Common.so.3 /opt/armonik-cpp/lib/
COPY --from=sdk /opt/armonik-cpp/lib/libArmoniK.Api.Worker.so.3 /opt/armonik-cpp/lib/
COPY --from=builder /opt/hwloc_cuda/lib/libhwloc.so.15 /opt/hwloc_cuda/lib/
COPY --from=builder /usr/local/lib/libchameleon.so.1 /usr/local/lib/
COPY --from=builder /usr/local/lib/libchameleon_starpu.so.1 /usr/local/lib/
COPY --from=builder /usr/local/lib/libcoreblas.so.1 /usr/local/lib/
COPY --from=builder /usr/local/lib/libgpucublas.so.1 /usr/local/lib/
COPY --from=builder /usr/local/lib/libhqr.so.0.1.0 /usr/local/lib/
COPY --from=builder /usr/local/lib/libopenblas.so.0 /usr/local/lib/
COPY --from=builder /usr/local/lib/libstarpu-1.4.so.7 /usr/local/lib/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libgrpc++.so.1.51 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libgrpc.so.29 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libgpr.so.29 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libprotobuf.so.32 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libre2.so.10 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libupb.so.29 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libcares.so.2 /usr/lib/x86_64-linux-gnu/
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libaddress_sorting.so.29 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/libssl.so.3 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/libcrypto.so.3 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/libz.so.1 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/libicudata.so.74 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/libicuuc.so.74 /usr/lib/x86_64-linux-gnu/
#COPY --from=sdk /usr/lib/x86_64-linux-gnu/liblzma.so.5 /usr/lib/x86_64-linux-gnu/
# Tous les absl vus dans ldd
COPY --from=sdk /usr/lib/x86_64-linux-gnu/libabsl_*.so.20220623 /usr/lib/x86_64-linux-gnu/
#COPY --from=builder /usr/local/cuda/lib64/libcublas.so.12 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libcublasLt.so.12 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libcudart.so.12 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libcusolver.so.11 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libcusparse.so.12 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libnvJitLink.so.12 /usr/local/cuda/lib64/
#COPY --from=builder /usr/local/cuda/lib64/libOpenCL.so.1 /usr/local/cuda/lib64/

WORKDIR /app

# COPY --from=worker-build /src/build/DagCholeskyWorker /app/DagCholeskyWorker
COPY --from=worker-build --chown=5000:5000 /src/build/DagCholeskyWorker /app/DagCholeskyWorker
# COPY --chmod=644 --chown=armonikuser:armonikuser appsettings.json /appsettings.json
COPY --chmod=644 --chown=5000:5000 appsettings.json /appsettings.json

RUN mkdir -p /home/armonikuser/.starpu/sampling /home/armonikuser/.cache \
 && chown -R 5000:5000 /home/armonikuser/.starpu /home/armonikuser/.cache

# USER armonikuser

USER 5000:5000
ENV HOME=/home/armonikuser \
    XDG_CACHE_HOME=/home/armonikuser/.cache \ 
    CHAMELEON_DIR="/usr/local" \
    STARPU_PREFIX="/usr/local" \
    CUDA_HOME="/usr/local/cuda" \
    LD_LIBRARY_PATH="/opt/armonik-cpp/lib:/opt/hwloc_cuda/lib:/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH:-}" \
    PATH="/usr/local/bin:/opt/hwloc_cuda/bin:/usr/local/cuda/bin:${PATH}"

CMD ["/app/DagCholeskyWorker"]
